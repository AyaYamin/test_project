{"ast":null,"code":"import _toConsumableArray from \"C:\\\\xampp\\\\htdocs\\\\xx-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\xx-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\xx-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\xx-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\xx-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\xx-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\xx-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\xx-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { withValidateFieldEventEmitter } from './withValidateFieldEventEmitter';\nimport { withFieldWillValidateEventEmitter } from './withFieldWillValidateEventEmitter';\nimport { withFieldDidValidateEventEmitter } from './withFieldDidValidateEventEmitter';\nimport { withFieldDidResetEventEmitter } from './withFieldDidResetEventEmitter';\nimport { InputElement } from './InputElement';\nimport { FieldsStore } from './FieldsStore';\nimport flattenDeep from './flattenDeep';\nimport notUndefined from './notUndefined';\n\nvar FormWithConstraintsComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormWithConstraintsComponent, _React$Component);\n\n  function FormWithConstraintsComponent() {\n    _classCallCheck(this, FormWithConstraintsComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormWithConstraintsComponent).apply(this, arguments));\n  }\n\n  return FormWithConstraintsComponent;\n}(React.Component);\n\nexport var FormWithConstraints =\n/*#__PURE__*/\nfunction (_withFieldDidResetEve) {\n  _inherits(FormWithConstraints, _withFieldDidResetEve);\n\n  function FormWithConstraints() {\n    var _this;\n\n    _classCallCheck(this, FormWithConstraints);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormWithConstraints).apply(this, arguments));\n    _this.form = null;\n    _this.fieldsStore = new FieldsStore();\n    _this.fieldFeedbacksKeyCounter = 0;\n    return _this;\n  }\n\n  _createClass(FormWithConstraints, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        form: this\n      };\n    }\n  }, {\n    key: \"computeFieldFeedbacksKey\",\n    value: function computeFieldFeedbacksKey() {\n      return \"\".concat(this.fieldFeedbacksKeyCounter++);\n    }\n  }, {\n    key: \"validateFields\",\n    value: function validateFields() {\n      for (var _len = arguments.length, inputsOrNames = new Array(_len), _key = 0; _key < _len; _key++) {\n        inputsOrNames[_key] = arguments[_key];\n      }\n\n      return this._validateFields.apply(this, [true].concat(inputsOrNames));\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.validateFieldsWithoutFeedback();\n    }\n  }, {\n    key: \"validateFieldsWithoutFeedback\",\n    value: function validateFieldsWithoutFeedback() {\n      for (var _len2 = arguments.length, inputsOrNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        inputsOrNames[_key2] = arguments[_key2];\n      }\n\n      return this._validateFields.apply(this, [false].concat(inputsOrNames));\n    }\n  }, {\n    key: \"_validateFields\",\n    value: function () {\n      var _validateFields2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(forceValidateFields) {\n        var fields,\n            _len3,\n            inputsOrNames,\n            _key3,\n            inputs,\n            _iteratorNormalCompletion,\n            _didIteratorError,\n            _iteratorError,\n            _iterator,\n            _step,\n            input,\n            field,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fields = new Array();\n\n                for (_len3 = _args.length, inputsOrNames = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                  inputsOrNames[_key3 - 1] = _args[_key3];\n                }\n\n                inputs = this.normalizeInputs.apply(this, inputsOrNames);\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 6;\n                _iterator = inputs[Symbol.iterator]();\n\n              case 8:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context.next = 17;\n                  break;\n                }\n\n                input = _step.value;\n                _context.next = 12;\n                return this.validateField(forceValidateFields, new InputElement(input));\n\n              case 12:\n                field = _context.sent;\n                if (field !== undefined) fields.push(field);\n\n              case 14:\n                _iteratorNormalCompletion = true;\n                _context.next = 8;\n                break;\n\n              case 17:\n                _context.next = 23;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](6);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 23:\n                _context.prev = 23;\n                _context.prev = 24;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 26:\n                _context.prev = 26;\n\n                if (!_didIteratorError) {\n                  _context.next = 29;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 29:\n                return _context.finish(26);\n\n              case 30:\n                return _context.finish(23);\n\n              case 31:\n                return _context.abrupt(\"return\", fields);\n\n              case 32:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 19, 23, 31], [24,, 26, 30]]);\n      }));\n\n      function _validateFields(_x) {\n        return _validateFields2.apply(this, arguments);\n      }\n\n      return _validateFields;\n    }()\n  }, {\n    key: \"validateField\",\n    value: function () {\n      var _validateField = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(forceValidateFields, input) {\n        var fieldName, field, arrayOfArrays;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fieldName = input.name;\n                field = this.fieldsStore.getField(fieldName);\n\n                if (!(field === undefined)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 5:\n                if (!(forceValidateFields || !field.hasFeedbacks())) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                field.clearValidations();\n                this.emitFieldWillValidateEvent(fieldName);\n                _context2.next = 10;\n                return this.emitValidateFieldEvent(input);\n\n              case 10:\n                arrayOfArrays = _context2.sent;\n                console.assert(JSON.stringify(flattenDeep(arrayOfArrays).filter(notUndefined)) === JSON.stringify(field.validations), \"FieldsStore does not match emitValidateFieldEvent() result, did the user changed the input rapidly?\");\n                this.emitFieldDidValidateEvent(field);\n\n              case 13:\n                return _context2.abrupt(\"return\", field);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function validateField(_x2, _x3) {\n        return _validateField.apply(this, arguments);\n      }\n\n      return validateField;\n    }()\n  }, {\n    key: \"normalizeInputs\",\n    value: function normalizeInputs() {\n      var _this2 = this;\n\n      var inputs;\n\n      for (var _len4 = arguments.length, inputsOrNames = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        inputsOrNames[_key4] = arguments[_key4];\n      }\n\n      if (inputsOrNames.length === 0) {\n        inputs = _toConsumableArray(this.form.querySelectorAll('[name]'));\n        inputs = inputs.filter(function (input) {\n          return input.validity !== undefined;\n        });\n        inputs.filter(function (input) {\n          return input.type !== 'checkbox' && input.type !== 'radio';\n        }).map(function (input) {\n          return input.name;\n        }).forEach(function (name, index, self) {\n          if (self.indexOf(name) !== index) {\n            throw new Error(\"Multiple elements matching '[name=\\\"\".concat(name, \"\\\"]' inside the form\"));\n          }\n        });\n      } else {\n        inputs = inputsOrNames.map(function (input) {\n          if (typeof input === 'string') {\n            var query = \"[name=\\\"\".concat(input, \"\\\"]\");\n\n            var elements = _toConsumableArray(_this2.form.querySelectorAll(query));\n\n            if (elements.filter(function (el) {\n              return el.validity === undefined;\n            }).length > 0) {\n              throw new Error(\"'\".concat(query, \"' should match an <input>, <select> or <textarea>\"));\n            }\n\n            if (elements.filter(function (el) {\n              return el.type !== 'checkbox' && el.type !== 'radio';\n            }).length > 1) {\n              throw new Error(\"Multiple elements matching '\".concat(query, \"' inside the form\"));\n            }\n\n            var element = elements[0];\n\n            if (element === undefined) {\n              throw new Error(\"Could not find field '\".concat(query, \"' inside the form\"));\n            }\n\n            return element;\n          } else {\n            return input;\n          }\n        });\n      }\n\n      return inputs;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return this.fieldsStore.isValid();\n    }\n  }, {\n    key: \"hasFeedbacks\",\n    value: function hasFeedbacks() {\n      return this.fieldsStore.hasFeedbacks();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      return this.resetFields();\n    }\n  }, {\n    key: \"resetFields\",\n    value: function () {\n      var _resetFields = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var fields,\n            inputs,\n            _iteratorNormalCompletion2,\n            _didIteratorError2,\n            _iteratorError2,\n            _iterator2,\n            _step2,\n            input,\n            field,\n            _args3 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                fields = new Array();\n                inputs = this.normalizeInputs.apply(this, _args3);\n                _iteratorNormalCompletion2 = true;\n                _didIteratorError2 = false;\n                _iteratorError2 = undefined;\n                _context3.prev = 5;\n                _iterator2 = inputs[Symbol.iterator]();\n\n              case 7:\n                if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                input = _step2.value;\n                _context3.next = 11;\n                return this.resetField(new InputElement(input));\n\n              case 11:\n                field = _context3.sent;\n                if (field !== undefined) fields.push(field);\n\n              case 13:\n                _iteratorNormalCompletion2 = true;\n                _context3.next = 7;\n                break;\n\n              case 16:\n                _context3.next = 22;\n                break;\n\n              case 18:\n                _context3.prev = 18;\n                _context3.t0 = _context3[\"catch\"](5);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context3.t0;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.prev = 23;\n\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n\n              case 25:\n                _context3.prev = 25;\n\n                if (!_didIteratorError2) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                throw _iteratorError2;\n\n              case 28:\n                return _context3.finish(25);\n\n              case 29:\n                return _context3.finish(22);\n\n              case 30:\n                return _context3.abrupt(\"return\", fields);\n\n              case 31:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5, 18, 22, 30], [23,, 25, 29]]);\n      }));\n\n      function resetFields() {\n        return _resetFields.apply(this, arguments);\n      }\n\n      return resetFields;\n    }()\n  }, {\n    key: \"resetField\",\n    value: function () {\n      var _resetField = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(input) {\n        var fieldName, field;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                fieldName = input.name;\n                field = this.fieldsStore.getField(fieldName);\n\n                if (!(field === undefined)) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 8;\n                break;\n\n              case 5:\n                field.clearValidations();\n                _context4.next = 8;\n                return this.emitFieldDidResetEvent(field);\n\n              case 8:\n                return _context4.abrupt(\"return\", field);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function resetField(_x4) {\n        return _resetField.apply(this, arguments);\n      }\n\n      return resetField;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"form\", Object.assign({\n        ref: function ref(form) {\n          return _this3.form = form;\n        }\n      }, this.props));\n    }\n  }]);\n\n  return FormWithConstraints;\n}(withFieldDidResetEventEmitter(withFieldWillValidateEventEmitter(withFieldDidValidateEventEmitter(withValidateFieldEventEmitter(FormWithConstraintsComponent)))));\nFormWithConstraints.childContextTypes = {\n  form: PropTypes.instanceOf(FormWithConstraints).isRequired\n};","map":null,"metadata":{},"sourceType":"module"}