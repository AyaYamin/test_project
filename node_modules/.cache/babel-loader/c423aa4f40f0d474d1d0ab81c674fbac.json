{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp1\\\\htdocs\\\\teacher11\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp1\\\\htdocs\\\\teacher11\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\xampp1\\\\htdocs\\\\teacher11\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp1\\\\htdocs\\\\teacher11\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar EventEmitter =\n/*#__PURE__*/\nfunction () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.listeners = new Map();\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"emit\",\n    value: function () {\n      var _emit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(eventName) {\n        var listeners,\n            ret,\n            _len,\n            args,\n            _key,\n            _iteratorNormalCompletion,\n            _didIteratorError,\n            _iteratorError,\n            _iterator,\n            _step,\n            listener,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                listeners = this.listeners.get(eventName);\n                ret = new Array();\n\n                if (!(listeners !== undefined)) {\n                  _context.next = 34;\n                  break;\n                }\n\n                console.assert(listeners.length > 0, \"No listener for event '\".concat(eventName, \"'\"));\n\n                for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                  args[_key - 1] = _args[_key];\n                }\n\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 8;\n                _iterator = listeners[Symbol.iterator]();\n\n              case 10:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context.next = 20;\n                  break;\n                }\n\n                listener = _step.value;\n                _context.t0 = ret;\n                _context.next = 15;\n                return listener.apply(void 0, args);\n\n              case 15:\n                _context.t1 = _context.sent;\n\n                _context.t0.push.call(_context.t0, _context.t1);\n\n              case 17:\n                _iteratorNormalCompletion = true;\n                _context.next = 10;\n                break;\n\n              case 20:\n                _context.next = 26;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t2 = _context[\"catch\"](8);\n                _didIteratorError = true;\n                _iteratorError = _context.t2;\n\n              case 26:\n                _context.prev = 26;\n                _context.prev = 27;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 29:\n                _context.prev = 29;\n\n                if (!_didIteratorError) {\n                  _context.next = 32;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 32:\n                return _context.finish(29);\n\n              case 33:\n                return _context.finish(26);\n\n              case 34:\n                return _context.abrupt(\"return\", ret);\n\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 22, 26, 34], [27,, 29, 33]]);\n      }));\n\n      function emit(_x) {\n        return _emit.apply(this, arguments);\n      }\n\n      return emit;\n    }()\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      if (!this.listeners.has(eventName)) this.listeners.set(eventName, []);\n      var listeners = this.listeners.get(eventName);\n      console.assert(listeners.indexOf(listener) === -1, \"Listener already added for event '\".concat(eventName, \"'\"));\n      listeners.push(listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(eventName, listener) {\n      var listeners = this.listeners.get(eventName);\n      console.assert(listeners !== undefined, \"Unknown event '\".concat(eventName, \"'\"));\n      var index = listeners.lastIndexOf(listener);\n      console.assert(index > -1, \"Listener not found for event '\".concat(eventName, \"'\"));\n      listeners.splice(index, 1);\n      if (listeners.length === 0) this.listeners.delete(eventName);\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nexport { EventEmitter as default };","map":null,"metadata":{},"sourceType":"module"}