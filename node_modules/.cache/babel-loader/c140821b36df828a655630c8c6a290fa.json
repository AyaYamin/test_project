{"ast":null,"code":"import _defineProperty from \"C:\\\\xampp\\\\htdocs\\\\material-dashboard-react-v1.5.0\\\\teacher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _extends from \"C:\\\\xampp\\\\htdocs\\\\material-dashboard-react-v1.5.0\\\\teacher\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\material-dashboard-react-v1.5.0\\\\teacher\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\";\nimport List from \"@material-ui/core/List\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\n\nvar Sidebar = function Sidebar(_ref) {\n  var props = _extends({}, _ref);\n\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var classes = props.classes,\n      color = props.color,\n      logo = props.logo,\n      image = props.image,\n      logoText = props.logoText,\n      routes = props.routes;\n  var links = React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, routes.map(function (prop, key) {\n    var activePro = \" \";\n    var listItemClasses;\n\n    if (prop.path === \"/upgrade-to-pro\") {\n      activePro = classes.activePro + \" \";\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], true));\n    } else {\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], activeRoute(prop.layout + prop.path)));\n    }\n\n    var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.layout + prop.path)));\n    return React.createElement(NavLink, {\n      to: prop.layout + prop.path,\n      className: activePro + classes.item,\n      activeClassName: \"active\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      className: classes.itemLink + listItemClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, typeof prop.icon === \"string\" ? React.createElement(Icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, prop.icon) : React.createElement(prop.icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: props.rtlActive ? prop.rtlName : prop.name,\n      className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n      disableTypography: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }));\n  var brand = React.createElement(\"div\", {\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Behavior_Menu\")));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, props.rtlActive ? React.createElement(RTLNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }) : React.createElement(AdminNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }) : null)), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }) : null)));\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(sidebarStyle)(Sidebar);","map":{"version":3,"sources":["C:\\xampp\\htdocs\\material-dashboard-react-v1.5.0\\teacher\\src\\components\\Sidebar\\Sidebar.jsx"],"names":["List","Drawer","Hidden","ListItem","Icon","ListItemText","withStyles","React","classNames","PropTypes","NavLink","RTLNavbarLinks","AdminNavbarLinks","sidebarStyle","Sidebar","props","activeRoute","routeName","location","pathname","indexOf","classes","color","logo","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","layout","whiteFontClasses","whiteFont","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import List from \"@material-ui/core/List\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport React from \"react\";\n\nimport classNames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\n\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\n\nconst Sidebar = ({ ...props }) => {\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n  const { classes, color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        return (\n          <NavLink\n            to={prop.layout + prop.path}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={\n                  props.rtlActive ? prop.rtlName : prop.name\n                }\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <center><a>Behavior_Menu</a></center>\n       \n     {/*  <a\n        href=\"https://www.creative-tim.com\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>*/} \n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(sidebarStyle)(Sidebar);\n"]},"metadata":{},"sourceType":"module"}